language: cpp
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.4']
      env: COMPILER=g++-4.4

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.6']
      env: COMPILER=g++-4.6

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.8']
      env: COMPILER=g++-4.8

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9']
      env: COMPILER=g++-4.9

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']
      env: COMPILER=g++-5

    - os: linux
      compiler: clang
      env: COMPILER=clang++

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5']
          packages: ['clang-3.5']
      env: COMPILER=clang++-3.5

    - os: linux
      compiler: gcc
      dist: precise
      env:
      - COMPILER=g++
      - CODE_COVERAGE_LIBS=-lgcov
      - CODE_COVERAGE_FLAGS=--coverage -fprofile-arcs -ftest-coverage
      before_install: 
      - sudo pip install codecov
      after_script:
      - chmod +x ./get_code_cov.sh
      - ./get_code_cov.sh
      - codecov

    - os: osx
      osx_image: xcode9
      env: COMPILER=clang++

script:
  - echo "script started"
  - cd ./stdex
  - chmod +x ./build_lib.sh
  - ./build_lib.sh
  - cd ..
  - chmod +x ./build_tests.sh
  - ./build_tests.sh
  - chmod +x ./run_tests.sh
  - ./run_tests.sh
#make CXX=$COMPILER -j3